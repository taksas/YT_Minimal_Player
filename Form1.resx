<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv5MsAL2SLjLhnwfv6KIA/+ii
        AP/oogD/6KIA/+iiAP/oogD/4Z8H772SLjK/kywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/kywAvZIuLOGf
        B9PoogDi6KIA5+iiAP3oogD96KIA5+iiAOLhnwfTvZIuLL+TLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+T
        LAC9ki4G4Z8HHeiiABzoogBL6KIA8uiiAPLoogBL6KIAHOGfBx29ki4Gv5MsAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6KIAAOiiADLoogDw6KIA8OiiADLoogAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoogAA6KIAMuiiAPDoogDw6KIAMuiiAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOOeBwDinggy5J8F8OSfBfDinggy454HAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        w///w8P//8PD///Bg///4Af//+AH///wD/8=
</value>
  </data>
</root>